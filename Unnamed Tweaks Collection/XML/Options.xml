<?xml version="1.0" encoding="utf-8"?>
<options>
	<option ID="Ava_UnnamedTweaksCollection_NameCarbideChefRecipes"
		DisplayText="Allow naming of Carbide Chef recipes" Category="Unnamed Tweaks Collection"
		Type="Checkbox" Default="Yes">
		<helptext>
			{{W|Due to code limitations, existing recipes are unaffected.}}
		</helptext>
	</option>
	<option ID="Ava_UnnamedTweaksCollection_DontTakeYurlsTreeItMakesThemSad"
		DisplayText="Block auto-collection of decorations"
		Category="Unnamed Tweaks Collection" Type="Combo" Values="Never,In Towns,Always" Default="In Towns">
		<helptext>
			This includes metal folding chairs and plastic trees.

			{{W|Only applies to newly-generated objects.}}
		</helptext>
	</option>
	<option ID="Ava_UnnamedTweaksCollection_DontTakeTownWater"
		DisplayText="Block auto-collection of fresh water in towns"
		Category="Unnamed Tweaks Collection" Type="Checkbox" Default="No"></option>
	<option ID="Ava_UnnamedTweaksCollection_DontTakeAllJunk"
		DisplayText="Block junk from Take All"
		Category="Unnamed Tweaks Collection" Type="Checkbox" Default="Yes">
		<helptext>
			This includes includes bedrolls, bones, boulders, flowers, and trash.

			{{W|Only applies to newly-generated objects.}}
		</helptext>
	</option>
	<option ID="Ava_UnnamedTweaksCollection_DifferentiateMaxCells"
		DisplayText="Differentiate fully-charged energy cells"
		Category="Unnamed Tweaks Collection" Type="Checkbox" Default="Yes">
		<helptext>
			Vanilla logic displays all power cells above 75% charge as {{G|Full}}, even if they aren't at cap. This tweak makes cells at 100% charge appear as {{G|Max}}; anything between 75% and 100% still appears as {{G|Full}} like usual.
		</helptext>
	</option>
	<option ID="Ava_UnnamedTweaksCollection_EnableMassPsychometry"
		DisplayText="Enable mass psychometry"
		Category="Unnamed Tweaks Collection" Type="Checkbox" Default="Yes">
		<helptext>
			When enabled, activating the Psychometry ability will prompt you to perform psychometry on every valid object in your inventory, rather than instructing you to check the context menu on individual objects. The context menu entry is still there, of course!
		</helptext>
	</option>
	<option ID="Ava_UnnamedTweaksCollection_EnableItemHauling"
		DisplayText="Item hauling behavior"
		Category="Unnamed Tweaks Collection" Type="Combo" Values="Disabled,Cached,All" Default="Disabled">
		<helptext>
			Implements a toggled ability that allows you to {{rules|drag things along the ground without picking them up}}, although doing so {{rules|takes a lot of time}}. Can be freely enabled or disabled in existing saves, but doing so requires a reload.
			
			{{W|Disabled:}} Disable the item hauling system.
			{{W|Cached:}} You haul only objects that were beneath you when you started hauling. Moving over new ones won't include them.
			{{W|All:}} You haul all objects beneath you, even if they weren't present when you started.
		</helptext>
	</option>
	<option ID="Ava_UnnamedTweaksCollection_RemoveCellByDefault"
		DisplayText="Highlight 'remove cell' by default in the replace cell menu"
		Category="Unnamed Tweaks Collection" Type="Checkbox" Default="No"></option>
	<option ID="Ava_UnnamedTweaksCollection_TreatModdedItemsAsScrap"
		DisplayText="'Treat as scrap' doesn't consider tinkering mods"
		Category="Unnamed Tweaks Collection" Type="Checkbox" Default="No">
		<helptext>
			Vanilla logic treats every modded combination of an item to be separate for the purposes of being scrap; for instance, marking a lacquered musket as scrap will only treat future lacquered muskets as scrap rather than every musket, for instance. This disables that behavior by checking the object's base type instead, meaning that mods will no longer be considered when determining scrap eligibility.
			
			{{W|Note that this can result in certain items being disassembled when you don't want to them to}}, like the Sparbine. Make sure to mark things as important if you decide to start scrapping other objects of the same base type.
		</helptext>
	</option>
	<option ID="Ava_UnnamedTweaksCollection_TreatRobotLimbsAsScrap"
		DisplayText="Treat all robot limbs as scrap"
		Category="Unnamed Tweaks Collection" Type="Combo" Values="None,All But Faces,All" Default="None">
		<helptext>
			Vanilla logic considers every robotic limb type (arm, leg, different heads, etc) to be separate for the purposes of being treated as scrap.
			
			This overrides the logic so that marking one robotic limb as scrap will treat all robotic limbs from any NPC type as scrap, with an optional setting to prevent faces from being subjected to the override too.
		</helptext>
	</option>
</options>
